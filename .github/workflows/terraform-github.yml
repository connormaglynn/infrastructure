name: 'Terraform - GitHub'

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/github/**'
      - '.github/workflows/terraform-github.yml'
  push:
    branches: [ main ]
    paths:
      - 'terraform/github/**'
      - '.github/workflows/terraform-github.yml'

defaults:
  run:
    working-directory: ./terraform/github
    shell: bash

jobs:
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Format
        run: terraform fmt -check

  plan:
    if: github.ref != 'refs/heads/main'
    name: 'Plan'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_IN_AUTOMATION: true

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      id: plan
      run: terraform plan
      continue-on-error: true

    - name: Comment Plan
      uses: peter-evans/create-or-update-comment@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Terraform Plan:

          ```
          ${{ steps.plan.outputs.stdout }}
          ```

    - name: Terraform Graph
      run: terraform graph

  apply:
    if: github.ref == 'refs/heads/main'
    name: 'Apply'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve
