name: 'Terraform - GitHub'

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/github/**'
      - '.github/workflows/terraform-github.yml'
  push:
    branches: [ main ]
    paths:
      - 'terraform/github/**'
      - '.github/workflows/terraform-github.yml'

defaults:
  run:
    working-directory: ./terraform/github
    shell: bash

jobs:
  plan:
    name: 'Plan'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=${{ github.workspace }}/tfplanoutput/tf.plan

      - name: Comment Plan
        if: always() && steps.plan.outputs.stdout
        uses: peter-evans/create-or-update-comment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Terraform Plan:
            
            https://github.com/${{ github.repository }}/pull/${{ github.event.number }}/checks#step:6:1

            ```
            ${{ steps.plan.outputs.stdout }}
            ```

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: ${{ github.workspace }}/tfplanoutput/
          if-no-files-found: error

      - name: Terraform Graph
        run: terraform graph


  apply:
    name: 'Apply'
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ${{ github.workspace }}/tfplanoutput

      - name: Terraform Apply
        run: terraform apply tf.plan -auto-approve
